local TASK_TEXT_FORMATTER_DEBUG = false;

function build_text(se_obj)
  local text = "";

  if IsStalker(se_obj) or se_obj:clsid() == clsid.trader or se_obj:clsid() == clsid.script_trader then
    text = build_character_text(se_obj, true)
  elseif IsMonster(se_obj) then
    text = build_location_text(se_obj)
  elseif IsAnomaly(se_obj) then
    text = build_location_text(se_obj)
  elseif se_obj:clsid() == clsid.smart_terrain then
    text = build_location_text(se_obj)
  elseif se_obj:clsid() == clsid.online_offline_group or se_obj:clsid() == clsid.online_offline_group_s then
    text = build_squad_text(se_obj)
  else
    if TASK_TEXT_FORMATTER_DEBUG then
      text = "Unknown clsid: " .. se_obj:clsid() .. " implement description building in task_text_formatter.script::build_text\\n\\n" .. build_location_text(se_obj)
    else
      text = build_location_text(se_obj)
    end
  end

  return " " .. text
end

function build_location_text(se_obj, squad)
  local default_color = utils_xml.get_color("pda_white")
  local location = dynamic_news_helper.GetPointDescription(se_obj)

  local current_target = squad and squad.current_target_id and alife_object(squad.current_target_id)
  local destination = current_target and dynamic_news_helper.GetPointDescription(current_target)

  local location_str = default_color .. game.translate_string("st_location") .. " " .. location

  if (not destination) or location == destination then
    return location_str, nil

  else
    return location_str, default_color .. game.translate_string("st_target") .. ": " .. destination
  end
  
end

function build_character_text(se_obj, include_location_and_target)  
  local format = ""
  local format_args = {}
  local default_color = utils_xml.get_color("pda_white")


  local name = se_obj.character_name and se_obj:character_name()
  if name then
    local name_str = default_color .. game.translate_string("st_mm_new_game_name") .. " " .. name
    format = format .. "%s \\n "
    format_args[#format_args + 1] = name_str
  end
  

  local community = se_obj.community and se_obj:community()
  if community then
    local faction_color = "%c[255,255,255,1]"
    if (game_relations.is_factions_enemies(db.actor:character_community(), community)) then
      faction_color = "%c[255,255,1,1]"
    elseif (game_relations.is_factions_friends(db.actor:character_community(), community)) then
      faction_color = "%c[255,1,255,1]"
    end

    local faction_str = default_color .. game.translate_string("ui_st_community") .. ": " .. faction_color .. game.translate_string(community) .. "%c[default]"
    format = format .. "%s \\n "
    format_args[#format_args + 1] = faction_str
  end


  local rank = se_obj.rank and se_obj:rank()
  if rank then
    local rank_str = default_color .. game.translate_string("ui_st_rank") .. ": " .. "%c[255,215,215,215]" .. game.translate_string("st_rank_"..ranks.get_se_obj_rank_name(se_obj)) .. " %c[255,110,110,255]" .. rank .. "%c[default]"
    format = format .. "%s \\n "
    format_args[#format_args + 1] = rank_str
  end
	

	local reputation = se_obj.reputation and se_obj:reputation()
  if reputation then
    local repu_color = "%c[255,255,255,1]"
    if (reputation <= -500) then
      repu_color = "%c[255,255,1,1]"
    elseif (reputation >= 500) then
      repu_color = "%c[255,1,255,1]"
    end
    local repu_str = default_color .. game.translate_string("ui_st_reputation") .. ": " .. repu_color .. game.translate_string(utils_obj.get_reputation_name(reputation)) .. "%c[default]"
    format = format .. "%s \\n "
    format_args[#format_args + 1] = repu_str
  end
	
	if include_location_and_target then	
    format = format .. "%s \\n "
    local squad = se_obj.group_id and se_obj.group_id ~= 65535 and alife_object(se_obj.group_id)
		local location_str, destination_str = build_location_text(se_obj, squad)
    format_args[#format_args + 1] = location_str
    if destination_str then
      format = format .. "%s \\n "
      format_args[#format_args + 1] = destination_str
    end
	end
	
	return strformat(format, unpack(format_args))
end

function build_squad_text(obj)
	local text = ""
	
	for k in obj:squad_members() do
		local se_obj = k.object or alife_object(k.id)
		if se_obj then
			text = text .. build_character_text(se_obj, false) .. "\\n \\n \\n "
		end
	end
	
	
	if text ~= "" then
		-- Remove last newline symbols since they are not needed
		text = string.sub(text, 1, string.len(text) - 9)
	end

  local location_str, destination_str = build_location_text(obj, obj)
  text = text .. "\\n \\n " .. location_str

  if destination_str then
    text = text .. "\\n " .. destination_str
  end
	
	return text	
end