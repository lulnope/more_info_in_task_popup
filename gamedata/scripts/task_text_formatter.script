function build_text(se_obj)
  local text = "";

  if IsStalker(se_obj) or se_obj:clsid() == clsid.trader or se_obj:clsid() == clsid.script_trader then
    text = build_character_text(se_obj, true)
  elseif IsMonster(se_obj) then
    text = build_location_text(se_obj)
  elseif IsAnomaly(se_obj) then
    text = build_location_text(se_obj)
  elseif se_obj:clsid() == clsid.smart_terrain then
    text = build_location_text(se_obj)
  elseif se_obj:clsid() == clsid.online_offline_group or se_obj:clsid() == clsid.online_offline_group_s then
    text = build_squad_text(se_obj)
  else
    text = "Unknown clsid: " .. se_obj:clsid() .. " implement description building in task_text_formatter.script::build_text\\n\\n" .. build_location_text(se_obj)
  end

  return " " .. text
end

function build_location_text(se_obj)
  local default_color = utils_xml.get_color("pda_white")
  local location = dynamic_news_helper.GetPointDescription(se_obj)
  return default_color .. game.translate_string("st_location") .. " " .. location
end

function build_character_text(se_obj, include_location)
	local faction_color = "%c[255,255,255,1]"
	if (game_relations.is_factions_enemies(db.actor:character_community(),se_obj:community())) then
		faction_color = "%c[255,255,1,1]"
	elseif (game_relations.is_factions_friends(db.actor:character_community(),se_obj:community())) then
		faction_color = "%c[255,1,255,1]"
	end
	
	local reputation = se_obj:reputation()
	
	local repu_color = "%c[255,255,255,1]"
	if (reputation <= -500) then
		repu_color = "%c[255,255,1,1]"
	elseif (reputation >= 500) then
		repu_color = "%c[255,1,255,1]"
	end
	
	local default_color = utils_xml.get_color("pda_white")
	
	local name_str = default_color .. game.translate_string("st_mm_new_game_name") .. " " .. se_obj:character_name()
	local faction_str = default_color .. game.translate_string("ui_st_community") .. ": " .. faction_color .. game.translate_string(se_obj:community()) .. "%c[default]"
	local rank_str = default_color .. game.translate_string("ui_st_rank") .. ": " .. "%c[255,215,215,215]" .. game.translate_string("st_rank_"..ranks.get_se_obj_rank_name(se_obj)) .. " %c[255,110,110,255]" .. se_obj:rank() .. "%c[default]"
	local repu_str = default_color .. game.translate_string("ui_st_reputation") .. ": " .. repu_color .. game.translate_string(utils_obj.get_reputation_name(reputation)) .. "%c[default]"
	
	if include_location then	
		return strformat([[%s \n %s \n %s \n %s \n %s]],name_str,faction_str,rank_str,repu_str,build_location_text(se_obj))
	end
	
	return strformat([[%s \n %s \n %s \n %s]],name_str,faction_str,rank_str,repu_str)
end

function build_squad_text(obj)
	local text = ""
	
	for k in obj:squad_members() do
		local se_obj = k.object or alife_object(k.id)
		if se_obj then
			text = text .. build_character_text(se_obj, false) .. "\\n \\n \\n "
		end
	end
	
	
	if text ~= "" then
		-- Remove last newline symbols since they are not needed
		text = string.sub(text, 1, string.len(text) - 9)
    text = text .. "\\n \\n " .. build_location_text(obj)
	end
	
	return text	
end